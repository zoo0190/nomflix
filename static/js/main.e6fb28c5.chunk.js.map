{"version":3,"sources":["api.js","Components/Section.js","Components/Loader.js","Components/Message.js","assets/doolys-welcome.png","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","props","color","Message","text","detailPadding","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","noImage","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","ImdbLink","StyledSlider","Slider","VideosWrapper","select","YoutubeLink","option","DetailPresenter","result","videos","backdrop_path","runtime","episode_run_time","genres","genre","index","name","production_countries","idx","iso_3166_1","overview","imdb_id","href","e","window","open","key","seasons","infinite","speed","slidesToShow","slidesToScroll","production_companies","logo_path","DetailContainer","pathname","location","includes","match","push","history","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6fb28c5.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'e2898a55158de8cedc6af60133056595',\n    language: 'en-US',\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get('movie/now_playing'),\n  upcoming: () => api.get('movie/upcoming'),\n  popular: () => api.get('movie/popular'),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: 'videos',\n      },\n    }),\n  search: term =>\n    api.get('search/movie', {\n      params: {\n        query: term,\n      },\n    }),\n  videos: id => api.get(`movie/${id}/videos`),\n};\n\nexport const tvApi = {\n  topRated: () => api.get('tv/top_rated'),\n  popular: () => api.get('tv/popular'),\n  airingToday: () => api.get('tv/airing_today'),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: 'videos',\n      },\n    }),\n  search: term =>\n    api.get('search/tv', {\n      params: {\n        query: term,\n      },\n    }),\n  videos: id => api.get(`tv/${id}/videos`),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType(\n    [PropTypes.arrayOf(PropTypes.node)],\n    PropTypes.node\n  ),\n};\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 32px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ✈️\n    </span>\n  </Container>\n);\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","export default __webpack_public_path__ + \"static/media/doolys-welcome.21afefe8.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport noImage from '../assets/doolys-welcome.png';\n\nconst Container = styled.div`\n  font-size: 12px;\n  padding: 0 ${props => (props.detailPadding ? '4px' : '0')};\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.3s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.3s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({\n  id,\n  imageUrl,\n  title,\n  rating,\n  year,\n  isMovie = false,\n  detailPadding,\n}) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container detailPadding={detailPadding}>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl ? `https://image.tmdb.org/t/p/w200${imageUrl}` : noImage\n          }\n        />\n        {rating && (\n          <Rating>\n            <span role=\"img\" aria-label=\"rating\">\n              🌟\n            </span>{' '}\n            {rating}/10\n          </Rating>\n        )}\n      </ImageContainer>\n      <Title>\n        {title.length > 15 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Helmet } from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;\n","import { moviesApi } from 'api';\nimport React from 'react';\nimport HomePresenter from './HomePresenter';\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\nimport { Helmet } from 'react-helmet';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from './TVContainer';\n\nexport default TVContainer;\n","import React from 'react';\nimport { tvApi } from 'api';\nimport TVPresenter from './TVPresenter';\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'Components/Loader';\nimport Section from 'Components/Section';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\nimport { Helmet } from 'react-helmet';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  updateTerm,\n  error,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n        {movieResults &&\n          tvResults &&\n          movieResults.length === 0 &&\n          tvResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;\n","import { moviesApi, tvApi } from 'api';\nimport React from 'react';\nimport SearchPresenter from './SearchPresenter';\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: '',\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== '') {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport Slider from 'react-slick';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'Components/Loader';\nimport noImage from '../../assets/doolys-welcome.png';\nimport { Helmet } from 'react-helmet';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\nimport Section from 'Components/Section';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst ImdbLink = styled.a`\n  display: inline-block;\n  margin-top: 8px;\n`;\n\nconst StyledSlider = styled(Slider)`\n  margin-top: 25px;\n  width: ${props => (props.length === 1 ? '12.5%' : '25%')};\n`;\n\nconst VideosWrapper = styled.select`\n  display: block;\n  margin-top: 5px;\n  background: transparent;\n  color: white;\n  outline: none;\n`;\n\nconst YoutubeLink = styled.option``;\n\nconst DetailPresenter = ({ result, error, loading, videos }) => {\n  const settings = {\n    infinite: true,\n    speed: 500,\n  };\n  return loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{' '}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : noImage\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n            {result.production_countries &&\n              result.production_countries.map((value, idx) => (\n                <span key={idx}>\n                  <Divider>·</Divider>\n                  <Item>{value.iso_3166_1}</Item>\n                </span>\n              ))}\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          {result.imdb_id && (\n            <ImdbLink\n              href={`https://www.imdb.com/title/${result.imdb_id}`}\n              target=\"_blank\"\n            >\n              Go to Imdb 👉\n            </ImdbLink>\n          )}\n          <VideosWrapper\n            onChange={e =>\n              e.target.value && window.open(e.target.value, '_blank')\n            }\n          >\n            <YoutubeLink value=\"\">Do you wanna videos? ✅</YoutubeLink>\n            {videos &&\n              videos.results.map(value => (\n                <YoutubeLink\n                  key={value.id}\n                  value={`https://www.youtube.com/watch?v=${value.key}`}\n                  target=\"_blank\"\n                >\n                  {value.name}\n                </YoutubeLink>\n              ))}\n          </VideosWrapper>\n          {result.seasons && (\n            <StyledSlider\n              {...settings}\n              slidesToShow={result.seasons.length === 1 ? 1 : 2}\n              slidesToScroll={result.seasons.length === 1 ? 1 : 2}\n              length={result.seasons.length}\n            >\n              {result.seasons &&\n                result.seasons.map(value => (\n                  <Poster\n                    key={value.id}\n                    id={value.id}\n                    imageUrl={value.poster_path}\n                    title={value.name}\n                    detailPadding={true}\n                  />\n                ))}\n            </StyledSlider>\n          )}\n          {result.production_companies && (\n            <Section>\n              {result.production_companies &&\n                result.production_companies.map(value => (\n                  <Poster\n                    key={value.id}\n                    id={value.id}\n                    imageUrl={value.logo_path}\n                    title={value.name}\n                    detailPadding={true}\n                  />\n                ))}\n            </Section>\n          )}\n        </Data>\n      </Content>\n    </Container>\n  );\n};\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;\n","import { moviesApi, tvApi } from 'api';\nimport React from 'react';\nimport DetailPresenter from './DetailPresenter';\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      videos: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes('/movie/'),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n\n    if (isNaN(+id)) {\n      return push('/');\n    }\n\n    let result = null;\n    let videos = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(+id));\n        ({ data: videos } = await moviesApi.videos(+id));\n      } else {\n        ({ data: result } = await tvApi.showDetail(+id));\n        ({ data: videos } = await tvApi.videos(+id));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result, videos });\n    }\n  }\n\n  render() {\n    const { result, error, loading, videos } = this.state;\n    return (\n      <DetailPresenter\n        result={result}\n        error={error}\n        loading={loading}\n        videos={videos}\n      />\n    );\n  }\n}\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 5px solid\n    ${props => (props.current ? '#3490db' : 'transparent')};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === '/'}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === '/tv'}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === '/search'}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport Home from 'Routes/Home';\nimport TV from 'Routes/TV';\nimport Search from 'Routes/Search';\nimport Detail from 'Routes/Detail';\nimport Header from './Header';\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" exact component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:14px;\n        background-color:rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from './GlobalStyles';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}